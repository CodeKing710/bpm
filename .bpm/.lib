#!/bin/bash

# bpm's Functions and Variables

# Vars
__cwd="$(pwd)"
prgroot="$HOME/.bpm"

declare -A lists # For any lists your app may need as reference

# Set app states in the following format:
# states[name]=""
declare -A states

# Add commands to the regex string below, separated by '|'
lists[cmds]="^(config|verbose|help|version)$"

__args() {
	# Process args
	[[ -z "$1" ]] && cat "$prgroot"/help | head -1 && exit
	while [[ -n "$1" ]]; do
		case "${1}" in
			-V | --verbose )
				VERBOSE=true
				;;
			-\? | --help )
				# Not using -h to leave it open for other possible args
				cat "$prgroot/help"
				exit;;
			-v | --version )
				cat "$prgroot/version"
				exit;;
			* )
				# Catch-all
				if [[ "$1" =~ ${lists[cmds]} ]]; then
					__cmds "$1"
					return 0
				else
					cat "$prgroot/help" | head -1
					error "'$1' is not an argument!"
					exit
				fi
				;;
		esac
	shift; done
}
__cmds() {
	# Process commands
	[[ -z "$1" ]] && cat "$prgroot"/help | head -1 && return 1
	while [[ -n "$1" ]]; do
		case "${1,,}" in
			@(verbose) )
				VERBOSE=true
				;;
			@(help) )
				cat "$prgroot/help"
				return 0;;
			@(version) )
				cat "$prgroot/version"
				return 0;;
			* )
				# Catch-all
				if [[ "$1" =~ ^- ]]; then
					__args "$1"
					return 0
				else
					verbose "Grepped command: '$(echo "${lists[cmds]}" | sed -e 's/\^\|[\(]\|[\)]\|\$//g' -e 's/[\|]/\n/g' | grep "$1")'"
					error "'$1' is not a command!"
					error "Did you mean to use '$(echo "${lists[cmds]}" | sed -e 's/\^\|[\(]\|[\)]\|\$//g' -e 's/[\|]/\n/g' | grep "$1")'?"
					return 0
				fi
				;;
		esac
	shift; done
}
error() { echo -e '\e[0;1;31m[ERROR]\e[0;0;0m '"$1" >&2; }
verbose() { [[ -n "$VERBOSE" ]] && echo -e '\e[0;1;35m[VERBOSE]\e[0;0;0m '"$1"; }
log() { echo -e '\e[0;1;32m[BPM]\e[0;0;0m '"$1"; }
